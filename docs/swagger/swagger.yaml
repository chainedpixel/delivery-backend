definitions:
  github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Profile:
    properties:
      additional_info:
        example: Additional information
        type: string
      birth_date:
        example: "2021-01-01"
        type: string
      document_number:
        example: "000000000"
        type: string
      document_type:
        example: DNI
        type: string
      emergency_contact_name:
        example: John Doe
        type: string
      emergency_contact_phone:
        example: "21212828"
        type: string
      profile_picture_url:
        type: string
      user_id:
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Role:
    properties:
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      description:
        example: Administrator role
        type: string
      id:
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      is_active:
        example: true
        type: boolean
      name:
        example: admin
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.User:
    properties:
      company_id:
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      deleted_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      email:
        example: example@example.com
        type: string
      email_verified_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      full_name:
        example: John Doe
        type: string
      id:
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      is_active:
        example: true
        type: boolean
      phone:
        example: "21212828"
        type: string
      phone_verified_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      profile:
        $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Profile'
      roles:
        items:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.UserRole'
        type: array
      sessions:
        description: Relationships
        items:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.UserSession'
        type: array
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.UserRole:
    properties:
      assigned_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      assigned_by:
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      auth:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Role'
        description: Relationships
      role_id:
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      user_id:
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.UserSession:
    properties:
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      device_info:
        example: '{"os":"android","version":"10"}'
        type: string
      expires_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      id:
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      ip_address:
        example: 200.43.52.1
        type: string
      last_activity:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Zone:
    properties:
      base_rate:
        type: number
      boundaries:
        type: string
      center_point:
        type: string
      code:
        type: string
      created_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      max_delivery_time:
        type: integer
      name:
        type: string
      priority_level:
        type: integer
      updated_at:
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.ActivateUserDTO:
    properties:
      active:
        description: |-
          Active status of the user to be updated
          @required
        example: true
        type: boolean
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.AssignRoleDTO:
    properties:
      role:
        description: |-
          RoleID or RoleName of the role to be assigned to the user
          @required
        example: admin or 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchCreateRequest:
    properties:
      address:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressDTO'
        description: Dirección asociada a la sucursal (opcional)
      code:
        description: Código único de la sucursal
        example: SUC-NORTE-001
        type: string
      contact_email:
        description: Email del contacto en la sucursal
        example: norte@expressdelivery.com
        type: string
      contact_name:
        description: Nombre del contacto en la sucursal
        example: Gerente Norte
        type: string
      contact_phone:
        description: Teléfono del contacto en la sucursal
        example: "+573001112233"
        type: string
      name:
        description: Nombre de la sucursal
        example: Sucursal Norte
        type: string
      operating_hours:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OperatingHoursDTO'
        description: Horarios de operación de la sucursal
      zone_id:
        description: ID de la zona a la que pertenece la sucursal
        example: f8c3e8d7-b6a5-4d3c-9f1e-0a2b4c6d8e0f
        type: string
    required:
    - code
    - contact_email
    - contact_name
    - contact_phone
    - name
    - operating_hours
    - zone_id
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchMetricsResponse:
    properties:
      active_drivers:
        description: Número de repartidores activos
        example: 10
        type: integer
      average_delivery_time:
        description: Tiempo promedio de entrega (en minutos)
        example: 40.2
        type: number
      cancelled_orders:
        description: Total de órdenes canceladas
        example: 15
        type: integer
      completed_orders:
        description: Total de órdenes completadas exitosamente
        example: 220
        type: integer
      delivery_success_rate:
        description: Tasa de entrega exitosa (porcentaje)
        example: 88
        type: number
      peak_hour_order_rate:
        description: Número de pedidos por hora pico
        example: 12.5
        type: number
      total_orders:
        description: Total de órdenes procesadas
        example: 250
        type: integer
      total_revenue:
        description: Ingresos totales generados
        example: 5000.75
        type: number
      unique_customers:
        description: Número de clientes únicos
        example: 120
        type: integer
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchResponse:
    properties:
      address:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressResponse'
        description: Dirección asociada a la sucursal
      code:
        description: Código único de la sucursal
        example: SUC-NORTE-001
        type: string
      company_id:
        description: ID de la empresa a la que pertenece
        example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
        type: string
      company_name:
        description: Nombre de la empresa
        example: Express Delivery Co.
        type: string
      contact_email:
        description: Email del contacto en la sucursal
        example: norte@expressdelivery.com
        type: string
      contact_name:
        description: Nombre del contacto en la sucursal
        example: Gerente Norte
        type: string
      contact_phone:
        description: Teléfono del contacto en la sucursal
        example: "+573001112233"
        type: string
      created_at:
        description: Cuando se creó la sucursal
        format: date-time
        type: string
      id:
        description: ID único de la sucursal
        example: b5f8c3d1-2e59-4c4b-a6e8-e5f3c0c3d1b5
        type: string
      is_active:
        description: Indica si la sucursal está activa
        example: true
        type: boolean
      metrics:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchMetricsResponse'
        description: Métricas de la sucursal (opcional)
      name:
        description: Nombre de la sucursal
        example: Sucursal Norte
        type: string
      operating_hours:
        description: Horarios de operación de la sucursal
        example: '{"weekdays":{"start":"08:00","end":"20:00"},"weekends":{"start":"09:00","end":"17:00"}}'
        type: string
      updated_at:
        description: Última actualización de la sucursal
        format: date-time
        type: string
      zone_id:
        description: ID de la zona a la que pertenece la sucursal
        example: f8c3e8d7-b6a5-4d3c-9f1e-0a2b4c6d8e0f
        type: string
      zone_name:
        description: Nombre de la zona
        example: Zona Norte
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchUpdateRequest:
    properties:
      code:
        description: Código único de la sucursal
        example: SUC-NORTE-001
        type: string
      contact_email:
        description: Email del contacto en la sucursal
        example: norte@expressdelivery.com
        type: string
      contact_name:
        description: Nombre del contacto en la sucursal
        example: Gerente Norte
        type: string
      contact_phone:
        description: Teléfono del contacto en la sucursal
        example: "+573001112233"
        type: string
      name:
        description: Nombre de la sucursal
        example: Sucursal Norte
        type: string
      operating_hours:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OperatingHoursDTO'
        description: Horarios de operación de la sucursal
      zone_id:
        description: ID de la zona a la que pertenece la sucursal
        example: f8c3e8d7-b6a5-4d3c-9f1e-0a2b4c6d8e0f
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressDTO:
    properties:
      address_line1:
        description: Primera línea de dirección
        example: 'Calle 100 #15-20'
        type: string
      address_line2:
        description: Segunda línea de dirección (opcional)
        example: Edificio Centro Empresarial
        type: string
      city:
        description: Ciudad
        example: Bogotá
        type: string
      is_main:
        description: Indica si es la dirección principal
        example: true
        type: boolean
      latitude:
        description: Latitud de la ubicación
        example: 4.68
        type: number
      longitude:
        description: Longitud de la ubicación
        example: -74.05
        type: number
      postal_code:
        description: Código postal
        example: "110121"
        type: string
      state:
        description: Estado o provincia
        example: Cundinamarca
        type: string
    required:
    - address_line1
    - city
    - state
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressResponse:
    properties:
      address_line1:
        description: Primera línea de dirección
        example: 'Calle 100 #15-20'
        type: string
      address_line2:
        description: Segunda línea de dirección
        example: Edificio Centro Empresarial
        type: string
      city:
        description: Ciudad
        example: Bogotá
        type: string
      company_id:
        description: ID de la empresa a la que pertenece
        example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
        type: string
      created_at:
        description: Cuando se creó la dirección
        format: date-time
        type: string
      id:
        description: ID único de la dirección
        example: e1b09d38-e71f-415f-b3eb-ffeb8dd3b493
        type: string
      is_main:
        description: Indica si es la dirección principal
        example: true
        type: boolean
      latitude:
        description: Latitud de la ubicación
        example: 4.68
        type: number
      longitude:
        description: Longitud de la ubicación
        example: -74.05
        type: number
      postal_code:
        description: Código postal
        example: "110121"
        type: string
      state:
        description: Estado o provincia
        example: Cundinamarca
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyCreateRequest:
    properties:
      contact_email:
        description: Email de contacto principal de la empresa
        example: contacto@expressdelivery.com
        type: string
      contact_phone:
        description: Teléfono de contacto principal
        example: "+573001234567"
        type: string
      contract_details:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.ContractDetailsDTO'
        description: Detalles del contrato en formato JSON
      contract_end_date:
        description: Fecha de fin del contrato (opcional)
        format: date-time
        type: string
      contract_start_date:
        description: Fecha de inicio del contrato
        format: date-time
        type: string
      delivery_rate:
        description: Tarifa base de entrega
        example: 20.5
        type: number
      legal_name:
        description: Nombre legal completo de la empresa
        example: Express Delivery S.A.S
        type: string
      logo_url:
        description: URL del logo de la empresa (opcional)
        example: https://www.example.com/logo.png
        type: string
      main_address:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressDTO'
        description: Dirección principal de la empresa
      name:
        description: Nombre comercial de la empresa
        example: Express Delivery Co.
        type: string
      tax_id:
        description: Identificador fiscal de la empresa
        example: 900123456-7
        type: string
      website:
        description: Sitio web de la empresa (opcional)
        example: https://www.expressdelivery.com
        type: string
    required:
    - contact_email
    - contact_phone
    - contract_start_date
    - delivery_rate
    - legal_name
    - main_address
    - name
    - tax_id
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyMetricsResponse:
    properties:
      active_branches:
        description: Número de sucursales activas
        example: 5
        type: integer
      average_delivery_time:
        description: Tiempo promedio de entrega (en minutos)
        example: 45.5
        type: number
      cancelled_orders:
        description: Total de órdenes canceladas
        example: 50
        type: integer
      completed_orders:
        description: Total de órdenes completadas exitosamente
        example: 1100
        type: integer
      delivery_success_rate:
        description: Tasa de entrega exitosa (porcentaje)
        example: 88
        type: number
      total_orders:
        description: Total de órdenes procesadas
        example: 1250
        type: integer
      total_revenue:
        description: Ingresos totales generados
        example: 25000.5
        type: number
      unique_customers:
        description: Número de clientes únicos
        example: 500
        type: integer
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyResponse:
    properties:
      addresses:
        description: Direcciones asociadas a la empresa
        items:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressResponse'
        type: array
      branches:
        description: Sucursales asociadas a la empresa
        items:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchResponse'
        type: array
      contact_email:
        description: Email de contacto principal de la empresa
        example: contacto@expressdelivery.com
        type: string
      contact_phone:
        description: Teléfono de contacto principal
        example: "+573001234567"
        type: string
      contract_details:
        description: Detalles del contrato en formato JSON
        type: string
      contract_end_date:
        description: Fecha de fin del contrato
        format: date-time
        type: string
      contract_start_date:
        description: Fecha de inicio del contrato
        format: date-time
        type: string
      created_at:
        description: Cuando se creó la empresa
        format: date-time
        type: string
      delivery_rate:
        description: Tarifa base de entrega
        example: 20.5
        type: number
      id:
        description: ID único de la empresa
        example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
        type: string
      is_active:
        description: Indica si la empresa está activa
        example: true
        type: boolean
      legal_name:
        description: Nombre legal completo de la empresa
        example: Express Delivery S.A.S
        type: string
      logo_url:
        description: URL del logo de la empresa
        example: https://www.example.com/logo.png
        type: string
      metrics:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyMetricsResponse'
        description: Métricas de la empresa (opcional)
      name:
        description: Nombre comercial de la empresa
        example: Express Delivery Co.
        type: string
      tax_id:
        description: Identificador fiscal de la empresa
        example: 900123456-7
        type: string
      updated_at:
        description: Última actualización de la empresa
        format: date-time
        type: string
      website:
        description: Sitio web de la empresa
        example: https://www.expressdelivery.com
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyUpdateRequest:
    properties:
      contact_email:
        description: Email de contacto principal de la empresa
        example: contacto@expressdelivery.com
        type: string
      contact_phone:
        description: Teléfono de contacto principal
        example: "+573001234567"
        type: string
      contract_details:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.ContractDetailsDTO'
        description: Detalles del contrato en formato JSON
      contract_end_date:
        description: Fecha de fin del contrato
        format: date-time
        type: string
      delivery_rate:
        description: Tarifa base de entrega
        example: 20.5
        type: number
      legal_name:
        description: Nombre legal completo de la empresa
        example: Express Delivery S.A.S
        type: string
      logo_url:
        description: URL del logo de la empresa
        example: https://www.example.com/logo.png
        type: string
      name:
        description: Nombre comercial de la empresa
        example: Express Delivery Co.
        type: string
      website:
        description: Sitio web de la empresa
        example: https://www.expressdelivery.com
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.ContractDetailsDTO:
    properties:
      contract_type:
        description: Tipo de contrato
        example: Standard
        type: string
      notice_period:
        description: Período de notificación en días
        example: 30
        type: integer
      payment_terms:
        description: Términos de pago
        example: Net 30
        type: string
      renewal_type:
        description: Tipo de renovación
        example: Automatic
        type: string
      signed_at:
        description: Fecha de firma del contrato
        format: date-time
        type: string
      signed_by:
        description: Persona que firmó el contrato
        example: John Doe
        type: string
      special_clauses:
        description: Cláusulas especiales (opcional)
        items:
          type: string
        type: array
    required:
    - contract_type
    - notice_period
    - payment_terms
    - renewal_type
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.DeliveryAddressRequest:
    description: Delivery destination address information
    properties:
      address_line1:
        description: |-
          First line of the address
          @required
        example: 123 Main Street
        type: string
      address_line2:
        description: Second line of the address (optional)
        example: Apartment 4B
        type: string
      address_notes:
        description: Additional notes about the address
        example: Ring doorbell twice
        type: string
      city:
        description: |-
          City name
          @required
        example: New York
        type: string
      postal_code:
        description: Postal or ZIP code
        example: "10001"
        type: string
      recipient_name:
        description: |-
          Name of the person receiving the package
          @required
        example: John Doe
        type: string
      recipient_phone:
        description: |-
          Contact phone number of the recipient
          @required
        example: "+1234567890"
        type: string
      state:
        description: |-
          State or province name
          @required
        example: NY
        type: string
    required:
    - address_line1
    - city
    - recipient_name
    - recipient_phone
    - state
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.DeliveryAddressResponse:
    description: Delivery address information
    properties:
      address_line1:
        description: First line of the address
        example: 123 Main Street
        type: string
      address_line2:
        description: Second line of the address (optional)
        example: Apartment 4B
        type: string
      city:
        description: City name
        example: New York
        type: string
      latitude:
        description: Latitude coordinate
        example: 40.7128
        type: number
      longitude:
        description: Longitude coordinate
        example: -74.006
        type: number
      postal_code:
        description: Postal or ZIP code
        example: "10001"
        type: string
      recipient_name:
        description: Name of the recipient
        example: John Doe
        type: string
      recipient_phone:
        description: Contact phone number of the recipient
        example: "+1234567890"
        type: string
      state:
        description: State or province name
        example: NY
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.DeliveryAddressUpdateRequest:
    description: Delivery destination address information for updates
    properties:
      address_line1:
        description: First line of the address
        example: 123 Main Street
        type: string
      address_line2:
        description: Second line of the address (optional)
        example: Apartment 4B
        type: string
      address_notes:
        description: Additional notes about the address
        example: Ring doorbell twice
        type: string
      city:
        description: City name
        example: New York
        type: string
      postal_code:
        description: Postal or ZIP code
        example: "10001"
        type: string
      recipient_name:
        description: Name of the person receiving the package
        example: John Doe
        type: string
      recipient_phone:
        description: Contact phone number of the recipient
        example: "+1234567890"
        type: string
      state:
        description: State or province name
        example: NY
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.LoginRequest:
    properties:
      device_info:
        additionalProperties: true
        description: Device information
        type: object
      email:
        description: User email
        type: string
      password:
        description: User password
        type: string
    required:
    - email
    - password
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.LoginResponse:
    properties:
      token:
        description: JWT Token
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OperatingHoursDTO:
    properties:
      weekdays:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OperatingHoursTimeDTO'
        description: Horario para días de semana
      weekends:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OperatingHoursTimeDTO'
        description: Horario para fines de semana
    required:
    - weekdays
    - weekends
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OperatingHoursTimeDTO:
    properties:
      end:
        description: Hora de fin (formato HH:MM)
        example: "20:00"
        type: string
      start:
        description: Hora de inicio (formato HH:MM)
        example: "08:00"
        type: string
    required:
    - end
    - start
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderCreateRequest:
    description: Request structure for creating a delivery order
    properties:
      client_id:
        description: |-
          Unique identifier of the client
          @required
        example: c7d8e9f0-3f4a-5c6b-7d8e-9f0a1b2c3d4e
        type: string
      company_pickup_id:
        description: |-
          Unique identifier of the company pickup location
          @required
        example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
        type: string
      delivery_address:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.DeliveryAddressRequest'
        description: |-
          Delivery destination address details
          @required
      delivery_deadline:
        description: |-
          Deadline for delivery completion
          @required
        example: "2023-05-15T16:30:00Z"
        format: date-time
        type: string
      delivery_notes:
        description: Additional notes for the delivery
        example: Please call recipient 5 minutes before arrival
        type: string
      distance:
        description: |-
          Distance of the delivery in kilometers
          @minimum 0
          @required
        example: 7.2
        minimum: 0
        type: number
      package_details:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PackageDetailRequest'
        description: |-
          Details about the package being delivered
          @required
      pickup_contact_name:
        description: |-
          Contact name for pickup location
          @required
        type: string
      pickup_contact_phone:
        description: |-
          Contact phone number for pickup location
          @required
        type: string
      pickup_notes:
        description: |-
          Important notes about the pickup location
          @required
        type: string
      pickup_time:
        description: |-
          Scheduled pickup time
          @required
        example: "2023-05-15T14:30:00Z"
        format: date-time
        type: string
      price:
        description: |-
          Price of the delivery in local currency
          @minimum 0
          @required
        example: 25.5
        minimum: 0
        type: number
      requires_signature:
        description: Whether recipient signature is required for delivery
        example: false
        type: boolean
    required:
    - client_id
    - company_pickup_id
    - delivery_address
    - delivery_deadline
    - distance
    - package_details
    - pickup_contact_name
    - pickup_contact_phone
    - pickup_time
    - price
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderDetailResponse:
    description: Order details including price, schedule and delivery requirements
    properties:
      delivered_at:
        description: When the order was actually delivered
        example: "2023-05-15T16:15:00Z"
        format: date-time
        type: string
      delivery_deadline:
        description: Deadline for delivery
        example: "2023-05-15T16:30:00Z"
        format: date-time
        type: string
      delivery_notes:
        description: Additional notes for delivery
        example: Please call recipient 5 minutes before arrival
        type: string
      distance:
        description: Distance to be traveled in kilometers
        example: 7.2
        type: number
      pickup_time:
        description: Scheduled pickup time
        example: "2023-05-15T14:30:00Z"
        format: date-time
        type: string
      price:
        description: Price of the delivery
        example: 25.5
        type: number
      requires_signature:
        description: Whether recipient signature is required
        example: false
        type: boolean
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderResponse:
    description: Order information with all related details
    properties:
      branch_id:
        description: Branch ID where the order originated
        example: b5f8c3d1-2e59-4c4b-a6e8-e5f3c0c3d1b5
        type: string
      branch_name:
        description: Branch name
        example: Downtown Branch
        type: string
      client_id:
        description: Client ID who placed the order
        example: c7d8e9f0-3f4a-5c6b-7d8e-9f0a1b2c3d4e
        type: string
      client_name:
        description: Client full name
        example: John Smith
        type: string
      company_id:
        description: Company ID that owns the order
        example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
        type: string
      company_name:
        description: Company name
        example: Express Delivery Inc.
        type: string
      created_at:
        description: When the order was created
        example: "2023-05-15T10:30:00Z"
        format: date-time
        type: string
      current_status:
        description: Current tracking status
        example: IN_TRANSIT
        type: string
      delivery_address:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.DeliveryAddressResponse'
        description: Delivery destination address
      detail:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderDetailResponse'
        description: Details of the order
      driver_id:
        description: Driver ID assigned to the order
        example: d1e2f3g4-h5i6-j7k8-l9m0-n1o2p3q4r5s6
        type: string
      driver_name:
        description: Driver full name
        example: Michael Johnson
        type: string
      estimated_arrival:
        description: Estimated time of arrival
        example: "2023-05-15T16:30:00Z"
        format: date-time
        type: string
      id:
        description: Unique identifier of the order
        example: a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6
        type: string
      last_updated:
        description: Last time the order status was updated
        example: "2023-05-15T12:45:00Z"
        format: date-time
        type: string
      package_detail:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PackageDetailResponse'
        description: Details about the package
      pickup_address:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PickupAddressResponse'
        description: Pickup origin address
      status:
        description: Current status of the order
        example: PENDING
        type: string
      status_history:
        description: Order status history
        items:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderStatusHistoryResponse'
        type: array
      tracking_number:
        description: Tracking number for the order
        example: DEL-230512-7890
        type: string
      updated_at:
        description: When the order was last updated
        example: "2023-05-15T10:30:00Z"
        format: date-time
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderStatusHistoryResponse:
    properties:
      description:
        description: Description of the status change
        example: Driver has accepted the order and is heading to pickup location
        type: string
      status:
        description: Name of the status
        example: PENDING
        type: string
      updated_at:
        description: Updated at time
        example: "2023-05-15T12:45:00Z"
        format: date-time
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderUpdateRequest:
    description: Request structure for updating a delivery order
    properties:
      delivery_address:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.DeliveryAddressUpdateRequest'
        description: Delivery destination address details
      delivery_deadline:
        description: Deadline for delivery completion - only modifiable if order is
          still in PENDING state
        example: "2023-05-15T16:30:00Z"
        format: date-time
        type: string
      delivery_notes:
        description: Additional notes for the delivery
        example: Please call recipient 5 minutes before arrival
        type: string
      distance:
        description: |-
          Distance of the delivery in kilometers
          @minimum 0
        example: 7.2
        minimum: 0
        type: number
      package_details:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PackageDetailUpdateRequest'
        description: Details about the package being delivered
      pickup_contact_name:
        description: |-
          Pickup contact information and notes
          Contact name for pickup location
        example: Jane Smith
        type: string
      pickup_contact_phone:
        description: Contact phone number for pickup location
        example: "+0987654321"
        type: string
      pickup_notes:
        description: Important notes about the pickup location
        example: Enter through loading dock
        type: string
      pickup_time:
        description: Scheduled pickup time - only modifiable if order is still in
          PENDING state
        example: "2023-05-15T14:30:00Z"
        format: date-time
        type: string
      price:
        description: |-
          Price of the delivery in local currency
          @minimum 0
        example: 25.5
        minimum: 0
        type: number
      requires_signature:
        description: Whether recipient signature is required for delivery
        example: false
        type: boolean
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PackageDetailRequest:
    description: Package characteristics and handling information
    properties:
      height:
        description: |-
          Height of the package in centimeters
          @minimum 0
        example: 15
        minimum: 0
        type: number
      is_fragile:
        description: Whether the package contains fragile items
        example: true
        type: boolean
      is_urgent:
        description: Whether the package requires urgent handling
        example: false
        type: boolean
      length:
        description: |-
          Length of the package in centimeters
          @minimum 0
        example: 30
        minimum: 0
        type: number
      special_instructions:
        description: Special handling instructions
        example: Contains glass items, handle with care
        type: string
      weight:
        description: |-
          Weight of the package in kilograms
          @minimum 0
        example: 2.5
        minimum: 0
        type: number
      width:
        description: |-
          Width of the package in centimeters
          @minimum 0
        example: 20
        minimum: 0
        type: number
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PackageDetailResponse:
    description: Package characteristics and handling requirements
    properties:
      dimensions:
        description: Package dimensions in JSON format
        example: '{"length":30,"width":20,"height":15,"unit":"cm"}'
        type: string
      is_fragile:
        description: Whether the package contains fragile items
        example: true
        type: boolean
      is_urgent:
        description: Whether the package requires urgent handling
        example: false
        type: boolean
      special_instructions:
        description: Special handling instructions
        example: Contains glass items, handle with care
        type: string
      weight:
        description: Weight of the package in kilograms
        example: 2.5
        type: number
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PackageDetailUpdateRequest:
    description: Package characteristics and handling information for updates
    properties:
      height:
        description: |-
          Height of the package in centimeters
          @minimum 0
        example: 15
        minimum: 0
        type: number
      is_fragile:
        description: Whether the package contains fragile items
        example: true
        type: boolean
      is_urgent:
        description: Whether the package requires urgent handling
        example: false
        type: boolean
      length:
        description: |-
          Length of the package in centimeters
          @minimum 0
        example: 30
        minimum: 0
        type: number
      special_instructions:
        description: Special handling instructions
        example: Contains glass items, handle with care
        type: string
      weight:
        description: |-
          Weight of the package in kilograms
          @minimum 0
        example: 2.5
        minimum: 0
        type: number
      width:
        description: |-
          Width of the package in centimeters
          @minimum 0
        example: 20
        minimum: 0
        type: number
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PaginatedResponse:
    description: Paginated data response with metadata about pagination
    properties:
      data:
        description: The actual data items (array of objects)
      page:
        description: Current page number
        example: 1
        type: integer
      page_size:
        description: Number of items per page
        example: 20
        type: integer
      total_items:
        description: Total number of items across all pages
        example: 100
        type: integer
      total_pages:
        description: Total number of pages
        example: 5
        type: integer
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PickupAddressResponse:
    description: Pickup address information
    properties:
      address_line1:
        description: First line of the address
        example: 456 Business Ave
        type: string
      address_line2:
        description: Second line of the address (optional)
        example: Suite 300
        type: string
      address_notes:
        description: Additional notes about the address
        example: Enter through loading dock
        type: string
      city:
        description: City name
        example: Chicago
        type: string
      contact_name:
        description: Name of the contact person at pickup location
        example: Jane Smith
        type: string
      contact_phone:
        description: Contact phone number at pickup location
        example: "+0987654321"
        type: string
      formatted_address:
        description: Full formatted address
        example: 456 Business Ave, Suite 300, Chicago, IL 60606
        type: string
      latitude:
        description: Latitude coordinate
        example: 41.8781
        type: number
      longitude:
        description: Longitude coordinate
        example: -87.6298
        type: number
      postal_code:
        description: Postal or ZIP code
        example: "60606"
        type: string
      state:
        description: State or province name
        example: IL
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UpdateUserDTO:
    properties:
      active:
        description: Active status of the user to be updated
        example: true
        type: boolean
      email:
        description: Email of the user to be updated
        example: example@example.com
        type: string
      full_name:
        description: Fullname of the user to be updated
        example: John Doe
        type: string
      password:
        description: Password of the user to be updated
        example: password
        type: string
      phone:
        description: Phone of the user to be updated
        example: "21212828"
        type: string
      profile:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UpdateUserProfileDTO'
        description: Profile of the user to be updated
      roles:
        example:
        - '["admin"]'
        items:
          type: string
        type: array
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UpdateUserProfileDTO:
    properties:
      additional_info:
        description: AdditionalInfo of the user to be updated
        example: Additional information
        type: string
      birth_date:
        description: BirthDate of the user to be updated
        example: 01-01-1990 or 01/01/1990
        type: string
      document_number:
        description: DocumentNumber of the user to be updated
        example: "12345678"
        type: string
      document_type:
        description: DocumentType of the user to be updated
        example: DNI
        type: string
      emergency_contact_name:
        description: EmergencyContactName of the user to be updated
        example: John Doe
        type: string
      emergency_contact_phone:
        description: EmergencyContactPhone of the user to be updated
        example: "21212828"
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UserDTO:
    properties:
      email:
        description: |-
          Email of the user to be created
          @required
        example: example@example.com
        type: string
      full_name:
        description: |-
          Fullname of the user to be created
          @required
        example: John Doe
        type: string
      password:
        description: |-
          Password of the user to be created
          @required
        example: password
        type: string
      phone:
        description: |-
          Phone number of the user to be created
          @required
        example: "21212828"
        type: string
      profile:
        allOf:
        - $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UserProfileDTO'
        description: |-
          Profile of the user to be created
          @required
      roles:
        description: |-
          Roles of the user to be created
          @required
        example:
        - '["admin"]'
        items:
          type: string
        type: array
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UserProfileDTO:
    properties:
      additional_info:
        description: AdditionalInfo of the user to be created
        example: Additional information
        type: string
      birth_date:
        description: |-
          BirthDate of the user to be created
          @required
        example: 01-01-1990 or 01/01/1990
        type: string
      document_number:
        description: |-
          DocumentNumber of the user to be created
          @required
        example: "12345678"
        type: string
      document_type:
        description: |-
          DocumentType of the user to be created
          @required
        example: DNI
        type: string
      emergency_contact_name:
        description: |-
          EmergencyContactName of the user to be created
          @required
        example: John Doe
        type: string
      emergency_contact_phone:
        description: |-
          EmergencyContactPhone of the user to be created
          @required
        example: "21212828"
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.ZoneAssignmentRequest:
    description: Solicitud para asignar una zona a una sucursal
    properties:
      zone_id:
        description: |-
          ID de la zona a asignar
          @required
        example: f8c3e8d7-b6a5-4d3c-9f1e-0a2b4c6d8e0f
        type: string
    required:
    - zone_id
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIError:
    properties:
      code:
        type: string
      details:
        items:
          type: string
        type: array
      message:
        type: string
    type: object
  github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse:
    properties:
      error:
        $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIError'
    type: object
  internal_infrastructure_api_handlers.LocationUpdateRequest:
    properties:
      latitude:
        type: number
      longitude:
        type: number
    type: object
info:
  contact: {}
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate users and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      summary: This endpoint is used to authenticate a users and return a JWT token
        to be used in subsequent requests
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: Logout users and invalidate JWT token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to logout a users and invalidate the JWT token
      tags:
      - auth
  /api/v1/branches:
    get:
      consumes:
      - application/json
      description: Obtiene todas las sucursales con filtros y paginación
      parameters:
      - description: Número de página
        in: query
        name: page
        type: integer
      - description: Tamaño de página
        in: query
        name: page_size
        type: integer
      - description: Nombre de la sucursal
        in: query
        name: name
        type: string
      - description: Código de la sucursal
        in: query
        name: code
        type: string
      - description: Nombre del contacto
        in: query
        name: contact_name
        type: string
      - description: Email del contacto
        in: query
        name: contact_email
        type: string
      - description: ID de la zona
        in: query
        name: zone_id
        type: string
      - description: Estado (activo/inactivo)
        in: query
        name: is_active
        type: string
      - description: Campo por el cual ordenar
        in: query
        name: sort_by
        type: string
      - description: Dirección de ordenamiento (asc/desc)
        in: query
        name: sort_direction
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Obtiene todas las sucursales de la empresa del usuario autenticado
      tags:
      - branches
    post:
      consumes:
      - application/json
      description: Crea una nueva sucursal para la empresa del usuario autenticado
      parameters:
      - description: Información de la sucursal
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Sucursal creada exitosamente
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Crea una nueva sucursal
      tags:
      - branches
  /api/v1/branches/{branch_id}:
    get:
      consumes:
      - application/json
      description: Obtiene los detalles de una sucursal específica
      parameters:
      - description: ID de la sucursal
        in: path
        name: branch_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Obtiene una sucursal por su ID
      tags:
      - branches
    put:
      consumes:
      - application/json
      description: Actualiza la información de una sucursal
      parameters:
      - description: ID de la sucursal
        in: path
        name: branch_id
        required: true
        type: string
      - description: Información actualizada de la sucursal
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Sucursal actualizada exitosamente
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Actualiza una sucursal existente
      tags:
      - branches
  /api/v1/branches/available-zones/{branch_id}:
    get:
      consumes:
      - application/json
      description: Retorna las zonas que pueden ser asignadas a una sucursal específica
      parameters:
      - description: ID de la sucursal
        in: path
        name: branch_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Zone'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Obtiene las zonas disponibles para una sucursal
      tags:
      - branches
      - zones
  /api/v1/branches/deactivate/{branch_id}:
    post:
      consumes:
      - application/json
      description: Cambia el estado de una sucursal a inactivo
      parameters:
      - description: ID de la sucursal
        in: path
        name: branch_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Sucursal desactivada exitosamente
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Desactiva una sucursal
      tags:
      - branches
  /api/v1/branches/metrics/{branch_id}:
    get:
      consumes:
      - application/json
      description: Retorna métricas como órdenes totales, completadas, canceladas,
        ingresos, etc.
      parameters:
      - description: ID de la sucursal
        in: path
        name: branch_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchMetricsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Obtiene las métricas de una sucursal
      tags:
      - branches
      - metrics
  /api/v1/branches/reactivate/{branch_id}:
    post:
      consumes:
      - application/json
      description: Cambia el estado de una sucursal a activo
      parameters:
      - description: ID de la sucursal
        in: path
        name: branch_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Sucursal reactivada exitosamente
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Reactiva una sucursal
      tags:
      - branches
  /api/v1/branches/zones/{branch_id}:
    post:
      consumes:
      - application/json
      description: Asigna una zona geográfica específica a una sucursal
      parameters:
      - description: ID de la sucursal
        in: path
        name: branch_id
        required: true
        type: string
      - description: Información de la zona a asignar
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.ZoneAssignmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Zona asignada exitosamente
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Asigna una zona a una sucursal
      tags:
      - branches
      - zones
  /api/v1/companies:
    get:
      consumes:
      - application/json
      description: Obtener lista de compañías con filtros y paginación
      parameters:
      - description: Nombre de la empresa
        in: query
        name: name
        type: string
      - description: Nombre legal de la empresa
        in: query
        name: legal_name
        type: string
      - description: Identificador fiscal
        in: query
        name: tax_id
        type: string
      - description: Estado activo/inactivo
        in: query
        name: is_active
        type: boolean
      - default: 1
        description: Número de página
        in: query
        name: page
        type: integer
      - default: 10
        description: Tamaño de página
        in: query
        name: page_size
        type: integer
      - description: Campo para ordenar
        in: query
        name: sort_by
        type: string
      - default: desc
        description: Dirección (asc o desc)
        in: query
        name: sort_direction
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PaginatedResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Obtener lista de compañías
      tags:
      - companies
    post:
      consumes:
      - application/json
      description: Crear una nueva compañia
      parameters:
      - description: Company information
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Company created successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Crear una nueva compañia
      tags:
      - companies
  /api/v1/companies/addresses:
    get:
      consumes:
      - application/json
      description: Obtener todas las direcciones de la compañia autenticada
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Obtener todas las direcciones de la compañia autenticada
      tags:
      - addresses
    post:
      consumes:
      - application/json
      description: Agregar una nueva dirección para la compañia autenticada
      parameters:
      - description: Address information
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Address added successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Agregar una nueva dirección para la compañia autenticada
      tags:
      - addresses
  /api/v1/companies/addresses/{address_id}:
    delete:
      consumes:
      - application/json
      description: Eliminar una dirección de la compañia autenticada
      parameters:
      - description: Address ID
        in: path
        name: address_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Address deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Eliminar una dirección de la compañia autenticada
      tags:
      - addresses
    put:
      consumes:
      - application/json
      description: Actualizar una dirección para la compañia autenticada
      parameters:
      - description: Address ID
        in: path
        name: address_id
        required: true
        type: string
      - description: Address information
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Address updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Actualizar una dirección para la compañia autenticada
      tags:
      - addresses
  /api/v1/companies/deactivate:
    post:
      consumes:
      - application/json
      description: Deactivate the authenticated company
      produces:
      - application/json
      responses:
        "200":
          description: Company deactivated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Deactivate the authenticated company
      tags:
      - companies
  /api/v1/companies/metrics:
    get:
      consumes:
      - application/json
      description: Obtener las métricas de la compañia
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyMetricsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Obtener las métricas de la compañia
      tags:
      - companies
      - metrics
  /api/v1/companies/profile:
    get:
      consumes:
      - application/json
      description: Obtener la información de principal de la compañia
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Obtener la información de principal de la compañia
      tags:
      - companies
    put:
      consumes:
      - application/json
      description: Actualizar la información de la compañia
      parameters:
      - description: Company information
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Company updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Actualizar la información de la compañia
      tags:
      - companies
  /api/v1/companies/reactivate:
    post:
      consumes:
      - application/json
      description: Reactivate the authenticated company
      produces:
      - application/json
      responses:
        "200":
          description: Company reactivated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Reactivate the authenticated company
      tags:
      - companies
  /api/v1/orders:
    get:
      consumes:
      - application/json
      description: Get orders by company
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Sort by
        in: query
        name: sort_by
        type: string
      - description: Tracking number
        in: query
        name: tracking_number
        type: string
      - description: Location like address, city, state, postal code, etc.
        in: query
        name: location
        type: string
      - description: Sort order
        in: query
        name: sort_direction
        type: string
      - description: Order status
        in: query
        name: status
        type: string
      - description: Start date
        in: query
        name: start_date
        type: string
      - description: End date
        in: query
        name: end_date
        type: string
      - description: Include deleted orders
        in: query
        name: include_deleted
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to get orders by company
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Create a new order
      parameters:
      - description: Order information
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Order created successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to create a new order
      tags:
      - orders
  /api/v1/orders/{order_id}:
    delete:
      consumes:
      - application/json
      description: Delete order
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to delete an order
      tags:
      - orders
    get:
      consumes:
      - application/json
      description: Get order by ID
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to get an order by ID
      tags:
      - orders
    patch:
      consumes:
      - application/json
      description: Change order status
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      - description: New status
        in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to change the status of an order
      tags:
      - orders
    put:
      consumes:
      - application/json
      description: Update order by ID
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      - description: Order information
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Order updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to update an order by ID
      tags:
      - orders
  /api/v1/orders/recovery/{order_id}:
    get:
      consumes:
      - application/json
      description: Restore order
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order restored successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to restore a deleted order
      tags:
      - orders
  /api/v1/roles:
    get:
      consumes:
      - application/json
      description: Get all roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Role'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all roles
      tags:
      - roles
  /api/v1/roles/{role}:
    get:
      consumes:
      - application/json
      description: Get role by ID or name
      parameters:
      - description: Role ID or name
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Get role by ID or name
      tags:
      - roles
  /api/v1/tracking/location/{order_id}:
    post:
      consumes:
      - application/json
      description: Actualiza la ubicación del repartidor para un pedido específico
      parameters:
      - description: ID del pedido
        in: path
        name: order_id
        required: true
        type: string
      - description: Datos de ubicación
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/internal_infrastructure_api_handlers.LocationUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Ubicación actualizada correctamente
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Actualiza la ubicación del repartidor
      tags:
      - tracking
  /api/v1/tracking/ws:
    get:
      consumes:
      - application/json
      description: Crea un canal WebSocket para recibir actualizaciones de pedidos
      produces:
      - application/json
      responses:
        "101":
          description: Conexión WebSocket establecida
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: Establece una conexión WebSocket para rastrear pedidos en tiempo real
      tags:
      - tracking
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Get all users
      parameters:
      - description: Company ID
        in: query
        name: company_id
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Sort by
        in: query
        name: sort_by
        type: string
      - description: Order by
        in: query
        name: sort_direction
        type: string
      - description: Status
        in: query
        name: status
        type: string
      - description: Creation date
        in: query
        name: creation_date
        type: string
      - description: Include deleted
        in: query
        name: include_deleted
        type: string
      - description: Name
        in: query
        name: name
        type: string
      - description: Email
        in: query
        name: email
        type: string
      - description: Phone
        in: query
        name: phone
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User object that needs to be created
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UserDTO'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to create a new user
      tags:
      - users
  /api/v1/users/{user_id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to delete a user by ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to get a user by ID
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Activate or deactivate a user by ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Activate or deactivate user
        in: body
        name: active
        required: true
        schema:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.ActivateUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: User activated or deactivated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to activate or deactivate a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user by ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: User object that needs to be updated
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UpdateUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to update a user by ID
      tags:
      - users
  /api/v1/users/profile:
    get:
      consumes:
      - application/json
      description: Get authenticated users profile information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to get the authenticated users profile information
        using the JWT token
      tags:
      - users
  /api/v1/users/recover/{user_id}:
    get:
      consumes:
      - application/json
      description: Recover a user by ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User recovered successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to recover a user by ID
      tags:
      - users
  /api/v1/users/roles/{user_id}:
    delete:
      consumes:
      - application/json
      description: Unassign a role from a user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Role object that needs to be unassigned
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.AssignRoleDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Role unassigned from user successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to unassign a role from a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get all roles of a user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Role'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to get all roles of a user
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Assign a role to a user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Role object that needs to be assigned
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.AssignRoleDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Role assigned to user successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to assign a role to a user
      tags:
      - users
  /api/v1/users/sessions/{user_id}:
    delete:
      consumes:
      - application/json
      description: Clean all sessions of a user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Sessions cleaned successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse'
      security:
      - BearerAuth: []
      summary: This endpoint is used to clean all sessions of a user
      tags:
      - users
swagger: "2.0"
