{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "Authenticate users and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "This endpoint is used to authenticate a users and return a JWT token to be used in subsequent requests",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logout users and invalidate JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "This endpoint is used to logout a users and invalidate the JWT token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/branches": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtiene todas las sucursales con filtros y paginación",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branches"
                ],
                "summary": "Obtiene todas las sucursales de la empresa del usuario autenticado",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Número de página",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Tamaño de página",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Nombre de la sucursal",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Código de la sucursal",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Nombre del contacto",
                        "name": "contact_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Email del contacto",
                        "name": "contact_email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID de la zona",
                        "name": "zone_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Estado (activo/inactivo)",
                        "name": "is_active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Campo por el cual ordenar",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Dirección de ordenamiento (asc/desc)",
                        "name": "sort_direction",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crea una nueva sucursal para la empresa del usuario autenticado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branches"
                ],
                "summary": "Crea una nueva sucursal",
                "parameters": [
                    {
                        "description": "Información de la sucursal",
                        "name": "branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Sucursal creada exitosamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/branches/available-zones/{branch_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna las zonas que pueden ser asignadas a una sucursal específica",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branches",
                    "zones"
                ],
                "summary": "Obtiene las zonas disponibles para una sucursal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de la sucursal",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Zone"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/branches/deactivate/{branch_id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cambia el estado de una sucursal a inactivo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branches"
                ],
                "summary": "Desactiva una sucursal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de la sucursal",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucursal desactivada exitosamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/branches/metrics/{branch_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna métricas como órdenes totales, completadas, canceladas, ingresos, etc.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branches",
                    "metrics"
                ],
                "summary": "Obtiene las métricas de una sucursal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de la sucursal",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchMetricsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/branches/reactivate/{branch_id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cambia el estado de una sucursal a activo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branches"
                ],
                "summary": "Reactiva una sucursal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de la sucursal",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucursal reactivada exitosamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/branches/zones/{branch_id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Asigna una zona geográfica específica a una sucursal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branches",
                    "zones"
                ],
                "summary": "Asigna una zona a una sucursal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de la sucursal",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Información de la zona a asignar",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.ZoneAssignmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Zona asignada exitosamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/branches/{branch_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtiene los detalles de una sucursal específica",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branches"
                ],
                "summary": "Obtiene una sucursal por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de la sucursal",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Actualiza la información de una sucursal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branches"
                ],
                "summary": "Actualiza una sucursal existente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de la sucursal",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Información actualizada de la sucursal",
                        "name": "branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucursal actualizada exitosamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/companies": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtener lista de compañías con filtros y paginación",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Obtener lista de compañías",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nombre de la empresa",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Nombre legal de la empresa",
                        "name": "legal_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Identificador fiscal",
                        "name": "tax_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Estado activo/inactivo",
                        "name": "is_active",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Número de página",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Tamaño de página",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Campo para ordenar",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "desc",
                        "description": "Dirección (asc o desc)",
                        "name": "sort_direction",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PaginatedResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crear una nueva compañia",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Crear una nueva compañia",
                "parameters": [
                    {
                        "description": "Company information",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Company created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/companies/addresses": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtener todas las direcciones de la compañia autenticada",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Obtener todas las direcciones de la compañia autenticada",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Agregar una nueva dirección para la compañia autenticada",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Agregar una nueva dirección para la compañia autenticada",
                "parameters": [
                    {
                        "description": "Address information",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Address added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/companies/addresses/{address_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Actualizar una dirección para la compañia autenticada",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Actualizar una dirección para la compañia autenticada",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address ID",
                        "name": "address_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Address information",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Eliminar una dirección de la compañia autenticada",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Eliminar una dirección de la compañia autenticada",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address ID",
                        "name": "address_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/companies/deactivate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deactivate the authenticated company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Deactivate the authenticated company",
                "responses": {
                    "200": {
                        "description": "Company deactivated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/companies/metrics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtener las métricas de la compañia",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies",
                    "metrics"
                ],
                "summary": "Obtener las métricas de la compañia",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyMetricsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/companies/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtener la información de principal de la compañia",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Obtener la información de principal de la compañia",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Actualizar la información de la compañia",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Actualizar la información de la compañia",
                "parameters": [
                    {
                        "description": "Company information",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/companies/reactivate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Reactivate the authenticated company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Reactivate the authenticated company",
                "responses": {
                    "200": {
                        "description": "Company reactivated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get orders by company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "This endpoint is used to get orders by company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Tracking number",
                        "name": "tracking_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Location like address, city, state, postal code, etc.",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort_direction",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include deleted orders",
                        "name": "include_deleted",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "This endpoint is used to create a new order",
                "parameters": [
                    {
                        "description": "Order information",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/orders/recovery/{order_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Restore order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "This endpoint is used to restore a deleted order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order restored successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/orders/{order_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get order by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "This endpoint is used to get an order by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update order by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "This endpoint is used to update an order by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order information",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "This endpoint is used to delete an order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change order status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "This endpoint is used to change the status of an order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/roles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Get all roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Role"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/roles/{role}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get role by ID or name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Get role by ID or name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID or name",
                        "name": "role",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/tracking/location/{order_id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Actualiza la ubicación del repartidor para un pedido específico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking"
                ],
                "summary": "Actualiza la ubicación del repartidor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID del pedido",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datos de ubicación",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_infrastructure_api_handlers.LocationUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ubicación actualizada correctamente",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/tracking/ws": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crea un canal WebSocket para recibir actualizaciones de pedidos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking"
                ],
                "summary": "Establece una conexión WebSocket para rastrear pedidos en tiempo real",
                "responses": {
                    "101": {
                        "description": "Conexión WebSocket establecida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "This endpoint is used to get all users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "company_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by",
                        "name": "sort_direction",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Creation date",
                        "name": "creation_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Include deleted",
                        "name": "include_deleted",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Phone",
                        "name": "phone",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "This endpoint is used to create a new user",
                "parameters": [
                    {
                        "description": "User object that needs to be created",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UserDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get authenticated users profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "This endpoint is used to get the authenticated users profile information using the JWT token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/recover/{user_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Recover a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "This endpoint is used to recover a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User recovered successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/roles/{user_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all roles of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "This endpoint is used to get all roles of a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Role"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Assign a role to a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "This endpoint is used to assign a role to a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role object that needs to be assigned",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.AssignRoleDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role assigned to user successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Unassign a role from a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "This endpoint is used to unassign a role from a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role object that needs to be unassigned",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.AssignRoleDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role unassigned from user successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/sessions/{user_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Clean all sessions of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "This endpoint is used to clean all sessions of a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sessions cleaned successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{user_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "This endpoint is used to get a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "This endpoint is used to update a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User object that needs to be updated",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UpdateUserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "This endpoint is used to delete a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Activate or deactivate a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "This endpoint is used to activate or deactivate a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Activate or deactivate user",
                        "name": "active",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.ActivateUserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User activated or deactivated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Profile": {
            "type": "object",
            "properties": {
                "additional_info": {
                    "type": "string",
                    "example": "Additional information"
                },
                "birth_date": {
                    "type": "string",
                    "example": "2021-01-01"
                },
                "document_number": {
                    "type": "string",
                    "example": "000000000"
                },
                "document_type": {
                    "type": "string",
                    "example": "DNI"
                },
                "emergency_contact_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "emergency_contact_phone": {
                    "type": "string",
                    "example": "21212828"
                },
                "profile_picture_url": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Role": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Administrator role"
                },
                "id": {
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.User": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "email_verified_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "full_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "id": {
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "phone": {
                    "type": "string",
                    "example": "21212828"
                },
                "phone_verified_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "profile": {
                    "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Profile"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.UserRole"
                    }
                },
                "sessions": {
                    "description": "Relationships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.UserSession"
                    }
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.UserRole": {
            "type": "object",
            "properties": {
                "assigned_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "assigned_by": {
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                },
                "auth": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Role"
                        }
                    ]
                },
                "role_id": {
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                },
                "user_id": {
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.UserSession": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "device_info": {
                    "type": "string",
                    "example": "{\"os\":\"android\",\"version\":\"10\"}"
                },
                "expires_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                },
                "ip_address": {
                    "type": "string",
                    "example": "200.43.52.1"
                },
                "last_activity": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_domain_delivery_models_entities.Zone": {
            "type": "object",
            "properties": {
                "base_rate": {
                    "type": "number"
                },
                "boundaries": {
                    "type": "string"
                },
                "center_point": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "max_delivery_time": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "priority_level": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.ActivateUserDTO": {
            "type": "object",
            "properties": {
                "active": {
                    "description": "Active status of the user to be updated\n@required",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.AssignRoleDTO": {
            "type": "object",
            "properties": {
                "role": {
                    "description": "RoleID or RoleName of the role to be assigned to the user\n@required",
                    "type": "string",
                    "example": "admin or 3fa85f64-5717-4562-b3fc-2c963f66afa6"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchCreateRequest": {
            "type": "object",
            "required": [
                "code",
                "contact_email",
                "contact_name",
                "contact_phone",
                "name",
                "operating_hours",
                "zone_id"
            ],
            "properties": {
                "address": {
                    "description": "Dirección asociada a la sucursal (opcional)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressDTO"
                        }
                    ]
                },
                "code": {
                    "description": "Código único de la sucursal",
                    "type": "string",
                    "example": "SUC-NORTE-001"
                },
                "contact_email": {
                    "description": "Email del contacto en la sucursal",
                    "type": "string",
                    "example": "norte@expressdelivery.com"
                },
                "contact_name": {
                    "description": "Nombre del contacto en la sucursal",
                    "type": "string",
                    "example": "Gerente Norte"
                },
                "contact_phone": {
                    "description": "Teléfono del contacto en la sucursal",
                    "type": "string",
                    "example": "+573001112233"
                },
                "name": {
                    "description": "Nombre de la sucursal",
                    "type": "string",
                    "example": "Sucursal Norte"
                },
                "operating_hours": {
                    "description": "Horarios de operación de la sucursal",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OperatingHoursDTO"
                        }
                    ]
                },
                "zone_id": {
                    "description": "ID de la zona a la que pertenece la sucursal",
                    "type": "string",
                    "example": "f8c3e8d7-b6a5-4d3c-9f1e-0a2b4c6d8e0f"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchMetricsResponse": {
            "type": "object",
            "properties": {
                "active_drivers": {
                    "description": "Número de repartidores activos",
                    "type": "integer",
                    "example": 10
                },
                "average_delivery_time": {
                    "description": "Tiempo promedio de entrega (en minutos)",
                    "type": "number",
                    "example": 40.2
                },
                "cancelled_orders": {
                    "description": "Total de órdenes canceladas",
                    "type": "integer",
                    "example": 15
                },
                "completed_orders": {
                    "description": "Total de órdenes completadas exitosamente",
                    "type": "integer",
                    "example": 220
                },
                "delivery_success_rate": {
                    "description": "Tasa de entrega exitosa (porcentaje)",
                    "type": "number",
                    "example": 88
                },
                "peak_hour_order_rate": {
                    "description": "Número de pedidos por hora pico",
                    "type": "number",
                    "example": 12.5
                },
                "total_orders": {
                    "description": "Total de órdenes procesadas",
                    "type": "integer",
                    "example": 250
                },
                "total_revenue": {
                    "description": "Ingresos totales generados",
                    "type": "number",
                    "example": 5000.75
                },
                "unique_customers": {
                    "description": "Número de clientes únicos",
                    "type": "integer",
                    "example": 120
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Dirección asociada a la sucursal",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressResponse"
                        }
                    ]
                },
                "code": {
                    "description": "Código único de la sucursal",
                    "type": "string",
                    "example": "SUC-NORTE-001"
                },
                "company_id": {
                    "description": "ID de la empresa a la que pertenece",
                    "type": "string",
                    "example": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
                },
                "company_name": {
                    "description": "Nombre de la empresa",
                    "type": "string",
                    "example": "Express Delivery Co."
                },
                "contact_email": {
                    "description": "Email del contacto en la sucursal",
                    "type": "string",
                    "example": "norte@expressdelivery.com"
                },
                "contact_name": {
                    "description": "Nombre del contacto en la sucursal",
                    "type": "string",
                    "example": "Gerente Norte"
                },
                "contact_phone": {
                    "description": "Teléfono del contacto en la sucursal",
                    "type": "string",
                    "example": "+573001112233"
                },
                "created_at": {
                    "description": "Cuando se creó la sucursal",
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "description": "ID único de la sucursal",
                    "type": "string",
                    "example": "b5f8c3d1-2e59-4c4b-a6e8-e5f3c0c3d1b5"
                },
                "is_active": {
                    "description": "Indica si la sucursal está activa",
                    "type": "boolean",
                    "example": true
                },
                "metrics": {
                    "description": "Métricas de la sucursal (opcional)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchMetricsResponse"
                        }
                    ]
                },
                "name": {
                    "description": "Nombre de la sucursal",
                    "type": "string",
                    "example": "Sucursal Norte"
                },
                "operating_hours": {
                    "description": "Horarios de operación de la sucursal",
                    "type": "string",
                    "example": "{\"weekdays\":{\"start\":\"08:00\",\"end\":\"20:00\"},\"weekends\":{\"start\":\"09:00\",\"end\":\"17:00\"}}"
                },
                "updated_at": {
                    "description": "Última actualización de la sucursal",
                    "type": "string",
                    "format": "date-time"
                },
                "zone_id": {
                    "description": "ID de la zona a la que pertenece la sucursal",
                    "type": "string",
                    "example": "f8c3e8d7-b6a5-4d3c-9f1e-0a2b4c6d8e0f"
                },
                "zone_name": {
                    "description": "Nombre de la zona",
                    "type": "string",
                    "example": "Zona Norte"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchUpdateRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Código único de la sucursal",
                    "type": "string",
                    "example": "SUC-NORTE-001"
                },
                "contact_email": {
                    "description": "Email del contacto en la sucursal",
                    "type": "string",
                    "example": "norte@expressdelivery.com"
                },
                "contact_name": {
                    "description": "Nombre del contacto en la sucursal",
                    "type": "string",
                    "example": "Gerente Norte"
                },
                "contact_phone": {
                    "description": "Teléfono del contacto en la sucursal",
                    "type": "string",
                    "example": "+573001112233"
                },
                "name": {
                    "description": "Nombre de la sucursal",
                    "type": "string",
                    "example": "Sucursal Norte"
                },
                "operating_hours": {
                    "description": "Horarios de operación de la sucursal",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OperatingHoursDTO"
                        }
                    ]
                },
                "zone_id": {
                    "description": "ID de la zona a la que pertenece la sucursal",
                    "type": "string",
                    "example": "f8c3e8d7-b6a5-4d3c-9f1e-0a2b4c6d8e0f"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressDTO": {
            "type": "object",
            "required": [
                "address_line1",
                "city",
                "state"
            ],
            "properties": {
                "address_line1": {
                    "description": "Primera línea de dirección",
                    "type": "string",
                    "example": "Calle 100 #15-20"
                },
                "address_line2": {
                    "description": "Segunda línea de dirección (opcional)",
                    "type": "string",
                    "example": "Edificio Centro Empresarial"
                },
                "city": {
                    "description": "Ciudad",
                    "type": "string",
                    "example": "Bogotá"
                },
                "is_main": {
                    "description": "Indica si es la dirección principal",
                    "type": "boolean",
                    "example": true
                },
                "latitude": {
                    "description": "Latitud de la ubicación",
                    "type": "number",
                    "example": 4.68
                },
                "longitude": {
                    "description": "Longitud de la ubicación",
                    "type": "number",
                    "example": -74.05
                },
                "postal_code": {
                    "description": "Código postal",
                    "type": "string",
                    "example": "110121"
                },
                "state": {
                    "description": "Estado o provincia",
                    "type": "string",
                    "example": "Cundinamarca"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressResponse": {
            "type": "object",
            "properties": {
                "address_line1": {
                    "description": "Primera línea de dirección",
                    "type": "string",
                    "example": "Calle 100 #15-20"
                },
                "address_line2": {
                    "description": "Segunda línea de dirección",
                    "type": "string",
                    "example": "Edificio Centro Empresarial"
                },
                "city": {
                    "description": "Ciudad",
                    "type": "string",
                    "example": "Bogotá"
                },
                "company_id": {
                    "description": "ID de la empresa a la que pertenece",
                    "type": "string",
                    "example": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
                },
                "created_at": {
                    "description": "Cuando se creó la dirección",
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "description": "ID único de la dirección",
                    "type": "string",
                    "example": "e1b09d38-e71f-415f-b3eb-ffeb8dd3b493"
                },
                "is_main": {
                    "description": "Indica si es la dirección principal",
                    "type": "boolean",
                    "example": true
                },
                "latitude": {
                    "description": "Latitud de la ubicación",
                    "type": "number",
                    "example": 4.68
                },
                "longitude": {
                    "description": "Longitud de la ubicación",
                    "type": "number",
                    "example": -74.05
                },
                "postal_code": {
                    "description": "Código postal",
                    "type": "string",
                    "example": "110121"
                },
                "state": {
                    "description": "Estado o provincia",
                    "type": "string",
                    "example": "Cundinamarca"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyCreateRequest": {
            "type": "object",
            "required": [
                "contact_email",
                "contact_phone",
                "contract_start_date",
                "delivery_rate",
                "legal_name",
                "main_address",
                "name",
                "tax_id"
            ],
            "properties": {
                "contact_email": {
                    "description": "Email de contacto principal de la empresa",
                    "type": "string",
                    "example": "contacto@expressdelivery.com"
                },
                "contact_phone": {
                    "description": "Teléfono de contacto principal",
                    "type": "string",
                    "example": "+573001234567"
                },
                "contract_details": {
                    "description": "Detalles del contrato en formato JSON",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.ContractDetailsDTO"
                        }
                    ]
                },
                "contract_end_date": {
                    "description": "Fecha de fin del contrato (opcional)",
                    "type": "string",
                    "format": "date-time"
                },
                "contract_start_date": {
                    "description": "Fecha de inicio del contrato",
                    "type": "string",
                    "format": "date-time"
                },
                "delivery_rate": {
                    "description": "Tarifa base de entrega",
                    "type": "number",
                    "example": 20.5
                },
                "legal_name": {
                    "description": "Nombre legal completo de la empresa",
                    "type": "string",
                    "example": "Express Delivery S.A.S"
                },
                "logo_url": {
                    "description": "URL del logo de la empresa (opcional)",
                    "type": "string",
                    "example": "https://www.example.com/logo.png"
                },
                "main_address": {
                    "description": "Dirección principal de la empresa",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressDTO"
                        }
                    ]
                },
                "name": {
                    "description": "Nombre comercial de la empresa",
                    "type": "string",
                    "example": "Express Delivery Co."
                },
                "tax_id": {
                    "description": "Identificador fiscal de la empresa",
                    "type": "string",
                    "example": "900123456-7"
                },
                "website": {
                    "description": "Sitio web de la empresa (opcional)",
                    "type": "string",
                    "example": "https://www.expressdelivery.com"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyMetricsResponse": {
            "type": "object",
            "properties": {
                "active_branches": {
                    "description": "Número de sucursales activas",
                    "type": "integer",
                    "example": 5
                },
                "average_delivery_time": {
                    "description": "Tiempo promedio de entrega (en minutos)",
                    "type": "number",
                    "example": 45.5
                },
                "cancelled_orders": {
                    "description": "Total de órdenes canceladas",
                    "type": "integer",
                    "example": 50
                },
                "completed_orders": {
                    "description": "Total de órdenes completadas exitosamente",
                    "type": "integer",
                    "example": 1100
                },
                "delivery_success_rate": {
                    "description": "Tasa de entrega exitosa (porcentaje)",
                    "type": "number",
                    "example": 88
                },
                "total_orders": {
                    "description": "Total de órdenes procesadas",
                    "type": "integer",
                    "example": 1250
                },
                "total_revenue": {
                    "description": "Ingresos totales generados",
                    "type": "number",
                    "example": 25000.5
                },
                "unique_customers": {
                    "description": "Número de clientes únicos",
                    "type": "integer",
                    "example": 500
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyResponse": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "Direcciones asociadas a la empresa",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyAddressResponse"
                    }
                },
                "branches": {
                    "description": "Sucursales asociadas a la empresa",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.BranchResponse"
                    }
                },
                "contact_email": {
                    "description": "Email de contacto principal de la empresa",
                    "type": "string",
                    "example": "contacto@expressdelivery.com"
                },
                "contact_phone": {
                    "description": "Teléfono de contacto principal",
                    "type": "string",
                    "example": "+573001234567"
                },
                "contract_details": {
                    "description": "Detalles del contrato en formato JSON",
                    "type": "string"
                },
                "contract_end_date": {
                    "description": "Fecha de fin del contrato",
                    "type": "string",
                    "format": "date-time"
                },
                "contract_start_date": {
                    "description": "Fecha de inicio del contrato",
                    "type": "string",
                    "format": "date-time"
                },
                "created_at": {
                    "description": "Cuando se creó la empresa",
                    "type": "string",
                    "format": "date-time"
                },
                "delivery_rate": {
                    "description": "Tarifa base de entrega",
                    "type": "number",
                    "example": 20.5
                },
                "id": {
                    "description": "ID único de la empresa",
                    "type": "string",
                    "example": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
                },
                "is_active": {
                    "description": "Indica si la empresa está activa",
                    "type": "boolean",
                    "example": true
                },
                "legal_name": {
                    "description": "Nombre legal completo de la empresa",
                    "type": "string",
                    "example": "Express Delivery S.A.S"
                },
                "logo_url": {
                    "description": "URL del logo de la empresa",
                    "type": "string",
                    "example": "https://www.example.com/logo.png"
                },
                "metrics": {
                    "description": "Métricas de la empresa (opcional)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyMetricsResponse"
                        }
                    ]
                },
                "name": {
                    "description": "Nombre comercial de la empresa",
                    "type": "string",
                    "example": "Express Delivery Co."
                },
                "tax_id": {
                    "description": "Identificador fiscal de la empresa",
                    "type": "string",
                    "example": "900123456-7"
                },
                "updated_at": {
                    "description": "Última actualización de la empresa",
                    "type": "string",
                    "format": "date-time"
                },
                "website": {
                    "description": "Sitio web de la empresa",
                    "type": "string",
                    "example": "https://www.expressdelivery.com"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.CompanyUpdateRequest": {
            "type": "object",
            "properties": {
                "contact_email": {
                    "description": "Email de contacto principal de la empresa",
                    "type": "string",
                    "example": "contacto@expressdelivery.com"
                },
                "contact_phone": {
                    "description": "Teléfono de contacto principal",
                    "type": "string",
                    "example": "+573001234567"
                },
                "contract_details": {
                    "description": "Detalles del contrato en formato JSON",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.ContractDetailsDTO"
                        }
                    ]
                },
                "contract_end_date": {
                    "description": "Fecha de fin del contrato",
                    "type": "string",
                    "format": "date-time"
                },
                "delivery_rate": {
                    "description": "Tarifa base de entrega",
                    "type": "number",
                    "example": 20.5
                },
                "legal_name": {
                    "description": "Nombre legal completo de la empresa",
                    "type": "string",
                    "example": "Express Delivery S.A.S"
                },
                "logo_url": {
                    "description": "URL del logo de la empresa",
                    "type": "string",
                    "example": "https://www.example.com/logo.png"
                },
                "name": {
                    "description": "Nombre comercial de la empresa",
                    "type": "string",
                    "example": "Express Delivery Co."
                },
                "website": {
                    "description": "Sitio web de la empresa",
                    "type": "string",
                    "example": "https://www.expressdelivery.com"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.ContractDetailsDTO": {
            "type": "object",
            "required": [
                "contract_type",
                "notice_period",
                "payment_terms",
                "renewal_type"
            ],
            "properties": {
                "contract_type": {
                    "description": "Tipo de contrato",
                    "type": "string",
                    "example": "Standard"
                },
                "notice_period": {
                    "description": "Período de notificación en días",
                    "type": "integer",
                    "example": 30
                },
                "payment_terms": {
                    "description": "Términos de pago",
                    "type": "string",
                    "example": "Net 30"
                },
                "renewal_type": {
                    "description": "Tipo de renovación",
                    "type": "string",
                    "example": "Automatic"
                },
                "signed_at": {
                    "description": "Fecha de firma del contrato",
                    "type": "string",
                    "format": "date-time"
                },
                "signed_by": {
                    "description": "Persona que firmó el contrato",
                    "type": "string",
                    "example": "John Doe"
                },
                "special_clauses": {
                    "description": "Cláusulas especiales (opcional)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.DeliveryAddressRequest": {
            "description": "Delivery destination address information",
            "type": "object",
            "required": [
                "address_line1",
                "city",
                "recipient_name",
                "recipient_phone",
                "state"
            ],
            "properties": {
                "address_line1": {
                    "description": "First line of the address\n@required",
                    "type": "string",
                    "example": "123 Main Street"
                },
                "address_line2": {
                    "description": "Second line of the address (optional)",
                    "type": "string",
                    "example": "Apartment 4B"
                },
                "address_notes": {
                    "description": "Additional notes about the address",
                    "type": "string",
                    "example": "Ring doorbell twice"
                },
                "city": {
                    "description": "City name\n@required",
                    "type": "string",
                    "example": "New York"
                },
                "postal_code": {
                    "description": "Postal or ZIP code",
                    "type": "string",
                    "example": "10001"
                },
                "recipient_name": {
                    "description": "Name of the person receiving the package\n@required",
                    "type": "string",
                    "example": "John Doe"
                },
                "recipient_phone": {
                    "description": "Contact phone number of the recipient\n@required",
                    "type": "string",
                    "example": "+1234567890"
                },
                "state": {
                    "description": "State or province name\n@required",
                    "type": "string",
                    "example": "NY"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.DeliveryAddressResponse": {
            "description": "Delivery address information",
            "type": "object",
            "properties": {
                "address_line1": {
                    "description": "First line of the address",
                    "type": "string",
                    "example": "123 Main Street"
                },
                "address_line2": {
                    "description": "Second line of the address (optional)",
                    "type": "string",
                    "example": "Apartment 4B"
                },
                "city": {
                    "description": "City name",
                    "type": "string",
                    "example": "New York"
                },
                "latitude": {
                    "description": "Latitude coordinate",
                    "type": "number",
                    "example": 40.7128
                },
                "longitude": {
                    "description": "Longitude coordinate",
                    "type": "number",
                    "example": -74.006
                },
                "postal_code": {
                    "description": "Postal or ZIP code",
                    "type": "string",
                    "example": "10001"
                },
                "recipient_name": {
                    "description": "Name of the recipient",
                    "type": "string",
                    "example": "John Doe"
                },
                "recipient_phone": {
                    "description": "Contact phone number of the recipient",
                    "type": "string",
                    "example": "+1234567890"
                },
                "state": {
                    "description": "State or province name",
                    "type": "string",
                    "example": "NY"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.DeliveryAddressUpdateRequest": {
            "description": "Delivery destination address information for updates",
            "type": "object",
            "properties": {
                "address_line1": {
                    "description": "First line of the address",
                    "type": "string",
                    "example": "123 Main Street"
                },
                "address_line2": {
                    "description": "Second line of the address (optional)",
                    "type": "string",
                    "example": "Apartment 4B"
                },
                "address_notes": {
                    "description": "Additional notes about the address",
                    "type": "string",
                    "example": "Ring doorbell twice"
                },
                "city": {
                    "description": "City name",
                    "type": "string",
                    "example": "New York"
                },
                "postal_code": {
                    "description": "Postal or ZIP code",
                    "type": "string",
                    "example": "10001"
                },
                "recipient_name": {
                    "description": "Name of the person receiving the package",
                    "type": "string",
                    "example": "John Doe"
                },
                "recipient_phone": {
                    "description": "Contact phone number of the recipient",
                    "type": "string",
                    "example": "+1234567890"
                },
                "state": {
                    "description": "State or province name",
                    "type": "string",
                    "example": "NY"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "device_info": {
                    "description": "Device information",
                    "type": "object",
                    "additionalProperties": true
                },
                "email": {
                    "description": "User email",
                    "type": "string"
                },
                "password": {
                    "description": "User password",
                    "type": "string"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "JWT Token",
                    "type": "string"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OperatingHoursDTO": {
            "type": "object",
            "required": [
                "weekdays",
                "weekends"
            ],
            "properties": {
                "weekdays": {
                    "description": "Horario para días de semana",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OperatingHoursTimeDTO"
                        }
                    ]
                },
                "weekends": {
                    "description": "Horario para fines de semana",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OperatingHoursTimeDTO"
                        }
                    ]
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OperatingHoursTimeDTO": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "end": {
                    "description": "Hora de fin (formato HH:MM)",
                    "type": "string",
                    "example": "20:00"
                },
                "start": {
                    "description": "Hora de inicio (formato HH:MM)",
                    "type": "string",
                    "example": "08:00"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderCreateRequest": {
            "description": "Request structure for creating a delivery order",
            "type": "object",
            "required": [
                "client_id",
                "company_pickup_id",
                "delivery_address",
                "delivery_deadline",
                "distance",
                "package_details",
                "pickup_contact_name",
                "pickup_contact_phone",
                "pickup_time",
                "price"
            ],
            "properties": {
                "client_id": {
                    "description": "Unique identifier of the client\n@required",
                    "type": "string",
                    "example": "c7d8e9f0-3f4a-5c6b-7d8e-9f0a1b2c3d4e"
                },
                "company_pickup_id": {
                    "description": "Unique identifier of the company pickup location\n@required",
                    "type": "string",
                    "example": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
                },
                "delivery_address": {
                    "description": "Delivery destination address details\n@required",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.DeliveryAddressRequest"
                        }
                    ]
                },
                "delivery_deadline": {
                    "description": "Deadline for delivery completion\n@required",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-05-15T16:30:00Z"
                },
                "delivery_notes": {
                    "description": "Additional notes for the delivery",
                    "type": "string",
                    "example": "Please call recipient 5 minutes before arrival"
                },
                "distance": {
                    "description": "Distance of the delivery in kilometers\n@minimum 0\n@required",
                    "type": "number",
                    "minimum": 0,
                    "example": 7.2
                },
                "package_details": {
                    "description": "Details about the package being delivered\n@required",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PackageDetailRequest"
                        }
                    ]
                },
                "pickup_contact_name": {
                    "description": "Contact name for pickup location\n@required",
                    "type": "string"
                },
                "pickup_contact_phone": {
                    "description": "Contact phone number for pickup location\n@required",
                    "type": "string"
                },
                "pickup_notes": {
                    "description": "Important notes about the pickup location\n@required",
                    "type": "string"
                },
                "pickup_time": {
                    "description": "Scheduled pickup time\n@required",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-05-15T14:30:00Z"
                },
                "price": {
                    "description": "Price of the delivery in local currency\n@minimum 0\n@required",
                    "type": "number",
                    "minimum": 0,
                    "example": 25.5
                },
                "requires_signature": {
                    "description": "Whether recipient signature is required for delivery",
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderDetailResponse": {
            "description": "Order details including price, schedule and delivery requirements",
            "type": "object",
            "properties": {
                "delivered_at": {
                    "description": "When the order was actually delivered",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-05-15T16:15:00Z"
                },
                "delivery_deadline": {
                    "description": "Deadline for delivery",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-05-15T16:30:00Z"
                },
                "delivery_notes": {
                    "description": "Additional notes for delivery",
                    "type": "string",
                    "example": "Please call recipient 5 minutes before arrival"
                },
                "distance": {
                    "description": "Distance to be traveled in kilometers",
                    "type": "number",
                    "example": 7.2
                },
                "pickup_time": {
                    "description": "Scheduled pickup time",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-05-15T14:30:00Z"
                },
                "price": {
                    "description": "Price of the delivery",
                    "type": "number",
                    "example": 25.5
                },
                "requires_signature": {
                    "description": "Whether recipient signature is required",
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderResponse": {
            "description": "Order information with all related details",
            "type": "object",
            "properties": {
                "branch_id": {
                    "description": "Branch ID where the order originated",
                    "type": "string",
                    "example": "b5f8c3d1-2e59-4c4b-a6e8-e5f3c0c3d1b5"
                },
                "branch_name": {
                    "description": "Branch name",
                    "type": "string",
                    "example": "Downtown Branch"
                },
                "client_id": {
                    "description": "Client ID who placed the order",
                    "type": "string",
                    "example": "c7d8e9f0-3f4a-5c6b-7d8e-9f0a1b2c3d4e"
                },
                "client_name": {
                    "description": "Client full name",
                    "type": "string",
                    "example": "John Smith"
                },
                "company_id": {
                    "description": "Company ID that owns the order",
                    "type": "string",
                    "example": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
                },
                "company_name": {
                    "description": "Company name",
                    "type": "string",
                    "example": "Express Delivery Inc."
                },
                "created_at": {
                    "description": "When the order was created",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-05-15T10:30:00Z"
                },
                "current_status": {
                    "description": "Current tracking status",
                    "type": "string",
                    "example": "IN_TRANSIT"
                },
                "delivery_address": {
                    "description": "Delivery destination address",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.DeliveryAddressResponse"
                        }
                    ]
                },
                "detail": {
                    "description": "Details of the order",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderDetailResponse"
                        }
                    ]
                },
                "driver_id": {
                    "description": "Driver ID assigned to the order",
                    "type": "string",
                    "example": "d1e2f3g4-h5i6-j7k8-l9m0-n1o2p3q4r5s6"
                },
                "driver_name": {
                    "description": "Driver full name",
                    "type": "string",
                    "example": "Michael Johnson"
                },
                "estimated_arrival": {
                    "description": "Estimated time of arrival",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-05-15T16:30:00Z"
                },
                "id": {
                    "description": "Unique identifier of the order",
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6"
                },
                "last_updated": {
                    "description": "Last time the order status was updated",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-05-15T12:45:00Z"
                },
                "package_detail": {
                    "description": "Details about the package",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PackageDetailResponse"
                        }
                    ]
                },
                "pickup_address": {
                    "description": "Pickup origin address",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PickupAddressResponse"
                        }
                    ]
                },
                "status": {
                    "description": "Current status of the order",
                    "type": "string",
                    "example": "PENDING"
                },
                "status_history": {
                    "description": "Order status history",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderStatusHistoryResponse"
                    }
                },
                "tracking_number": {
                    "description": "Tracking number for the order",
                    "type": "string",
                    "example": "DEL-230512-7890"
                },
                "updated_at": {
                    "description": "When the order was last updated",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-05-15T10:30:00Z"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderStatusHistoryResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description of the status change",
                    "type": "string",
                    "example": "Driver has accepted the order and is heading to pickup location"
                },
                "status": {
                    "description": "Name of the status",
                    "type": "string",
                    "example": "PENDING"
                },
                "updated_at": {
                    "description": "Updated at time",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-05-15T12:45:00Z"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.OrderUpdateRequest": {
            "description": "Request structure for updating a delivery order",
            "type": "object",
            "properties": {
                "delivery_address": {
                    "description": "Delivery destination address details",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.DeliveryAddressUpdateRequest"
                        }
                    ]
                },
                "delivery_deadline": {
                    "description": "Deadline for delivery completion - only modifiable if order is still in PENDING state",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-05-15T16:30:00Z"
                },
                "delivery_notes": {
                    "description": "Additional notes for the delivery",
                    "type": "string",
                    "example": "Please call recipient 5 minutes before arrival"
                },
                "distance": {
                    "description": "Distance of the delivery in kilometers\n@minimum 0",
                    "type": "number",
                    "minimum": 0,
                    "example": 7.2
                },
                "package_details": {
                    "description": "Details about the package being delivered",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PackageDetailUpdateRequest"
                        }
                    ]
                },
                "pickup_contact_name": {
                    "description": "Pickup contact information and notes\nContact name for pickup location",
                    "type": "string",
                    "example": "Jane Smith"
                },
                "pickup_contact_phone": {
                    "description": "Contact phone number for pickup location",
                    "type": "string",
                    "example": "+0987654321"
                },
                "pickup_notes": {
                    "description": "Important notes about the pickup location",
                    "type": "string",
                    "example": "Enter through loading dock"
                },
                "pickup_time": {
                    "description": "Scheduled pickup time - only modifiable if order is still in PENDING state",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-05-15T14:30:00Z"
                },
                "price": {
                    "description": "Price of the delivery in local currency\n@minimum 0",
                    "type": "number",
                    "minimum": 0,
                    "example": 25.5
                },
                "requires_signature": {
                    "description": "Whether recipient signature is required for delivery",
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PackageDetailRequest": {
            "description": "Package characteristics and handling information",
            "type": "object",
            "properties": {
                "height": {
                    "description": "Height of the package in centimeters\n@minimum 0",
                    "type": "number",
                    "minimum": 0,
                    "example": 15
                },
                "is_fragile": {
                    "description": "Whether the package contains fragile items",
                    "type": "boolean",
                    "example": true
                },
                "is_urgent": {
                    "description": "Whether the package requires urgent handling",
                    "type": "boolean",
                    "example": false
                },
                "length": {
                    "description": "Length of the package in centimeters\n@minimum 0",
                    "type": "number",
                    "minimum": 0,
                    "example": 30
                },
                "special_instructions": {
                    "description": "Special handling instructions",
                    "type": "string",
                    "example": "Contains glass items, handle with care"
                },
                "weight": {
                    "description": "Weight of the package in kilograms\n@minimum 0",
                    "type": "number",
                    "minimum": 0,
                    "example": 2.5
                },
                "width": {
                    "description": "Width of the package in centimeters\n@minimum 0",
                    "type": "number",
                    "minimum": 0,
                    "example": 20
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PackageDetailResponse": {
            "description": "Package characteristics and handling requirements",
            "type": "object",
            "properties": {
                "dimensions": {
                    "description": "Package dimensions in JSON format",
                    "type": "string",
                    "example": "{\"length\":30,\"width\":20,\"height\":15,\"unit\":\"cm\"}"
                },
                "is_fragile": {
                    "description": "Whether the package contains fragile items",
                    "type": "boolean",
                    "example": true
                },
                "is_urgent": {
                    "description": "Whether the package requires urgent handling",
                    "type": "boolean",
                    "example": false
                },
                "special_instructions": {
                    "description": "Special handling instructions",
                    "type": "string",
                    "example": "Contains glass items, handle with care"
                },
                "weight": {
                    "description": "Weight of the package in kilograms",
                    "type": "number",
                    "example": 2.5
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PackageDetailUpdateRequest": {
            "description": "Package characteristics and handling information for updates",
            "type": "object",
            "properties": {
                "height": {
                    "description": "Height of the package in centimeters\n@minimum 0",
                    "type": "number",
                    "minimum": 0,
                    "example": 15
                },
                "is_fragile": {
                    "description": "Whether the package contains fragile items",
                    "type": "boolean",
                    "example": true
                },
                "is_urgent": {
                    "description": "Whether the package requires urgent handling",
                    "type": "boolean",
                    "example": false
                },
                "length": {
                    "description": "Length of the package in centimeters\n@minimum 0",
                    "type": "number",
                    "minimum": 0,
                    "example": 30
                },
                "special_instructions": {
                    "description": "Special handling instructions",
                    "type": "string",
                    "example": "Contains glass items, handle with care"
                },
                "weight": {
                    "description": "Weight of the package in kilograms\n@minimum 0",
                    "type": "number",
                    "minimum": 0,
                    "example": 2.5
                },
                "width": {
                    "description": "Width of the package in centimeters\n@minimum 0",
                    "type": "number",
                    "minimum": 0,
                    "example": 20
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PaginatedResponse": {
            "description": "Paginated data response with metadata about pagination",
            "type": "object",
            "properties": {
                "data": {
                    "description": "The actual data items (array of objects)"
                },
                "page": {
                    "description": "Current page number",
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "description": "Number of items per page",
                    "type": "integer",
                    "example": 20
                },
                "total_items": {
                    "description": "Total number of items across all pages",
                    "type": "integer",
                    "example": 100
                },
                "total_pages": {
                    "description": "Total number of pages",
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.PickupAddressResponse": {
            "description": "Pickup address information",
            "type": "object",
            "properties": {
                "address_line1": {
                    "description": "First line of the address",
                    "type": "string",
                    "example": "456 Business Ave"
                },
                "address_line2": {
                    "description": "Second line of the address (optional)",
                    "type": "string",
                    "example": "Suite 300"
                },
                "address_notes": {
                    "description": "Additional notes about the address",
                    "type": "string",
                    "example": "Enter through loading dock"
                },
                "city": {
                    "description": "City name",
                    "type": "string",
                    "example": "Chicago"
                },
                "contact_name": {
                    "description": "Name of the contact person at pickup location",
                    "type": "string",
                    "example": "Jane Smith"
                },
                "contact_phone": {
                    "description": "Contact phone number at pickup location",
                    "type": "string",
                    "example": "+0987654321"
                },
                "formatted_address": {
                    "description": "Full formatted address",
                    "type": "string",
                    "example": "456 Business Ave, Suite 300, Chicago, IL 60606"
                },
                "latitude": {
                    "description": "Latitude coordinate",
                    "type": "number",
                    "example": 41.8781
                },
                "longitude": {
                    "description": "Longitude coordinate",
                    "type": "number",
                    "example": -87.6298
                },
                "postal_code": {
                    "description": "Postal or ZIP code",
                    "type": "string",
                    "example": "60606"
                },
                "state": {
                    "description": "State or province name",
                    "type": "string",
                    "example": "IL"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UpdateUserDTO": {
            "type": "object",
            "properties": {
                "active": {
                    "description": "Active status of the user to be updated",
                    "type": "boolean",
                    "example": true
                },
                "email": {
                    "description": "Email of the user to be updated",
                    "type": "string",
                    "example": "example@example.com"
                },
                "full_name": {
                    "description": "Fullname of the user to be updated",
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "description": "Password of the user to be updated",
                    "type": "string",
                    "example": "password"
                },
                "phone": {
                    "description": "Phone of the user to be updated",
                    "type": "string",
                    "example": "21212828"
                },
                "profile": {
                    "description": "Profile of the user to be updated",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UpdateUserProfileDTO"
                        }
                    ]
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"admin\"]"
                    ]
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UpdateUserProfileDTO": {
            "type": "object",
            "properties": {
                "additional_info": {
                    "description": "AdditionalInfo of the user to be updated",
                    "type": "string",
                    "example": "Additional information"
                },
                "birth_date": {
                    "description": "BirthDate of the user to be updated",
                    "type": "string",
                    "example": "01-01-1990 or 01/01/1990"
                },
                "document_number": {
                    "description": "DocumentNumber of the user to be updated",
                    "type": "string",
                    "example": "12345678"
                },
                "document_type": {
                    "description": "DocumentType of the user to be updated",
                    "type": "string",
                    "example": "DNI"
                },
                "emergency_contact_name": {
                    "description": "EmergencyContactName of the user to be updated",
                    "type": "string",
                    "example": "John Doe"
                },
                "emergency_contact_phone": {
                    "description": "EmergencyContactPhone of the user to be updated",
                    "type": "string",
                    "example": "21212828"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UserDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email of the user to be created\n@required",
                    "type": "string",
                    "example": "example@example.com"
                },
                "full_name": {
                    "description": "Fullname of the user to be created\n@required",
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "description": "Password of the user to be created\n@required",
                    "type": "string",
                    "example": "password"
                },
                "phone": {
                    "description": "Phone number of the user to be created\n@required",
                    "type": "string",
                    "example": "21212828"
                },
                "profile": {
                    "description": "Profile of the user to be created\n@required",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UserProfileDTO"
                        }
                    ]
                },
                "roles": {
                    "description": "Roles of the user to be created\n@required",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"admin\"]"
                    ]
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.UserProfileDTO": {
            "type": "object",
            "properties": {
                "additional_info": {
                    "description": "AdditionalInfo of the user to be created",
                    "type": "string",
                    "example": "Additional information"
                },
                "birth_date": {
                    "description": "BirthDate of the user to be created\n@required",
                    "type": "string",
                    "example": "01-01-1990 or 01/01/1990"
                },
                "document_number": {
                    "description": "DocumentNumber of the user to be created\n@required",
                    "type": "string",
                    "example": "12345678"
                },
                "document_type": {
                    "description": "DocumentType of the user to be created\n@required",
                    "type": "string",
                    "example": "DNI"
                },
                "emergency_contact_name": {
                    "description": "EmergencyContactName of the user to be created\n@required",
                    "type": "string",
                    "example": "John Doe"
                },
                "emergency_contact_phone": {
                    "description": "EmergencyContactPhone of the user to be created\n@required",
                    "type": "string",
                    "example": "21212828"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_dto.ZoneAssignmentRequest": {
            "description": "Solicitud para asignar una zona a una sucursal",
            "type": "object",
            "required": [
                "zone_id"
            ],
            "properties": {
                "zone_id": {
                    "description": "ID de la zona a asignar\n@required",
                    "type": "string",
                    "example": "f8c3e8d7-b6a5-4d3c-9f1e-0a2b4c6d8e0f"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_MarlonG1_delivery-backend_internal_infrastructure_api_responser.APIError"
                }
            }
        },
        "internal_infrastructure_api_handlers.LocationUpdateRequest": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        }
    }
}